profiles {

    // ========================================================================
    // Local docker container env for mouse as a default
    // Run example:
    // nextflow run ~/repos/pipelines/nf/dev_workflow.nf 
    // --RUN_NAME test_run_0623 
    // --lib_digest libdigest.csv 
    // --sam_digest sample_digest.csv
    standard {

        // general parameters
        params.RUN_NAME = 'samples'
        params.HOME_REPO = '/home/app.dev1/repos/pipelines/'
        params.GENOMEREFERENCE = '/home/share/storages/2T/genome/'

        params.output = 'publisher'

        // parameters of R1 trimming
        params.trim_ncores = 2
        params.adapter_seq = "CTGTCTCTTATA"  // nextera
        params.trim_qual = 20

        // parameters of R2 parsing
        params.umi_len = 10
        params.r2_parse_threads = 4

        // parameters of genome alignment
        params.alignment_ncore = 4
        params.ramsize = 4000000000

        // parameters for read counting & bam annotation
        params.count_ncores = 3
        params.macs_genome_type = "mm"
        params.genome_file = '/mouse/bwa_index/GRCm39.primary_assembly.genome.fa.gz'
        params.bwa_index_dir = '/mouse/bwa_index/'
        params.star_index_dir = '/mouse/star_index/'

        // parameters for read counting & bam annotation
        params.genome_bin = '/mouse/GRCm39_1kb.saf'
        params.genome_saf = '/mouse/gencode.vM28.annotation.saf'
        params.genome_gtf_collapsed = '/mouse/gencode.vM28.annotation.collapsed.gtf'
        params.genome_bed = '/mouse/gencode.vM28.annotation.bed'
        params.enhancer_saf = '/mouse/old_annots/GRCm39_Encode_Enhancers.saf'
        params.promoter_saf = '/mouse/old_annots/GRCm39_Encode_Promoters.saf'
        params.genome_element_db_saf = '/mouse/mmSDB.saf'

        process {

            executor = 'local'  

            withName:trim_fq_single {
                // conda params.HOME_REPO + '/nf/envs/cutadapt.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/cutadapt:latest'
            }

            withName:parse_pairedtag_r2 {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:barcode_qc {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:add_tags {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_bams {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:alignment_qc {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:star_aligner_single {
                // conda params.HOME_REPO + '/nf/envs/star.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/star:latest'
                cpus = 4
                memory = 36.GB
            }

            withName:bwa_aligner_single {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_rnaseqc {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:rnaseqc_call {
                // conda params.HOME_REPO  + '/nf/envs/rseqc.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/rseqc:latest'
            }

            withName:annotate_reads_with_features {
                // conda params.HOME_REPO + '/nf/envs/featurecounts.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/featurecounts:latest'
            }

            withName:umitools_count {
                // conda params.HOME_REPO + '/nf/envs/umi_tools.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/umi_tools:latest'
            }

            withName:annotate_multiple_features {
                // conda params.HOME_REPO + '/nf/envs/featurecounts.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/featurecounts:latest'
            }

            withName:merge_counts {
                // conda params.HOME_REPO + '/nf/envs/scanalysis.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/scanalysis:latest'
            }

            withName:h5ad_qc {
                // conda params.HOME_REPO + '/nf/envs/scanalysis.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/scanalysis:latest'
            }

            withName:MACS2_peakcall {
                // conda params.HOME_REPO  + '/nf/envs/macs2.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/macs2:latest'
            }

            withName:chip_qc {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_chip_qc {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }
        }

        docker {
            enabled = true
            // runOptions = "--group-add app.dev1 --group-add data"
            runOptions = "--privileged"
        }
    }



    // ========================================================================
    // Local docker container env for human
    // Run exmple:
    // nextflow run ~/repos/pipelines/nf/dev_workflow.nf 
    // --RUN_NAME test_run_0623 
    // --lib_digest libdigest.csv 
    // --sam_digest sample_digest.csv   
    human_local_docker {

        // Local Docker container environment
        // human_local_docker 
        
        // general parameters
        params.RUN_NAME = 'samples'
        params.HOME_REPO = '/home/app.dev1/repos/pipelines/'
        params.GENOMEREFERENCE = '/home/share/storages/2T/genome/'

        params.output_dir = 'publisher'

        // parameters of R1 trimming
        params.trim_ncores = 2
        params.adapter_seq = "CTGTCTCTTATA"  // nextera
        params.trim_qual = 20

        // parameters of R2 parsing
        params.umi_len = 10
        params.r2_parse_threads = 4

        // parameters of genome alignment
        params.alignment_ncore = 4
        params.ramsize = 4000000000

        // parameters for read counting & bam annotation
        params.count_ncores = 3
        params.macs_genome_type = "hg"
        params.genome_file = '/human/GRCh38.primary_assembly.genome.fa'
        params.bwa_index_dir = '/human/bwa_index/'
        params.star_index_dir = '/human/star_index/'

        // parameters for read counting & bam annotation
        params.genome_bin = '/human/GRCh38_1kb.saf'
        params.genome_saf = '/human/gencode.v39.annotation.saf'
        params.genome_gtf_collapsed = '/human/gencode.v39.annotation.collapsed.gtf'
        params.genome_bed = '/human/gencode.v39.annotation.bed'
        params.enhancer_saf = '/human/RegEmtDB_enhancer_hg38.saf'
        params.promoter_saf = '/human/RegEmtDB_promoter_hg38.saf'
        params.genome_element_db_saf = '/mouse/mmSDB.saf' // ??

        process {

            executor = 'local'  

            withName:trim_fq_single {
                // conda params.HOME_REPO + '/nf/envs/cutadapt.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/cutadapt:latest'
            }

            withName:parse_pairedtag_r2 {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:barcode_qc {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:add_tags {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_bams {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:alignment_qc {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:star_aligner_single {
                // conda params.HOME_REPO + '/nf/envs/star.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/star:latest'
            }

            withName:bwa_aligner_single {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_rnaseqc {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:rnaseqc_call {
                // conda params.HOME_REPO  + '/nf/envs/rseqc.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/rseqc:latest'
            }

            withName:annotate_reads_with_features {
                // conda params.HOME_REPO + '/nf/envs/featurecounts.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/featurecounts:latest'
            }

            withName:umitools_count {
                // conda params.HOME_REPO + '/nf/envs/umi_tools.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/umi_tools:latest'
            }

            withName:annotate_multiple_features {
                // conda params.HOME_REPO + '/nf/envs/featurecounts.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/featurecounts:latest'
            }

            withName:merge_counts {
                // conda params.HOME_REPO + '/nf/envs/scanalysis.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/scanalysis:latest'
            }

            withName:h5ad_qc {
                // conda params.HOME_REPO + '/nf/envs/scanalysis.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/scanalysis:latest'
            }

            withName:MACS2_peakcall {
                // conda params.HOME_REPO  + '/nf/envs/macs2.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/macs2:latest'
            }

            withName:chip_qc {
                // conda params.HOME_REPO + '/nf/envs/bwa.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_chip_qc {
                // conda params.HOME_REPO + '/nf/envs/skbio.yaml'
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }
        }
        docker {
            enabled = true
        }
    }



    // =========================================================================
    // AWS docker container env for mouse
    // Issue 1: "publishData" to S3 doesn't work. 
    // Issue 2: BWA and STAR processes are too slow due to slowness 
    // in transferring alignment indices to each container
    // For example, BWA process generates almost 30 containers depending on 
    // combination of samples, antibody and cell number. And
    // each needs to copy the BWA index from S3  

    // Run example:
    // docker container run -it 204154409870.dkr.ecr.us-west-2.amazonaws.com/pairedtag:latest /bin/bash
    // nextflow run /repos/pipelines/nf/dev_workflow.nf 
    // -profile mouse_aws_batch 
    // -bucket-dir s3://epigenome-pipeline/results 
    // --lib_digest s3://epigenome-pipeline/input_digest/s3_libdigest.csv 
    // --sam_digest s3://epigenome-pipeline/input_digest/s3_sample_digest.csv 
    // --output s3://epigenome-pipeline/publisher
    mouse_aws_batch {

        // general parameters
        params.RUN_NAME = 'samples'
        params.HOME_REPO = '/repos/pipelines/'
        params.GENOMEREFERENCE = 's3://epigenome-ref-genome'
        params.output = 'publisher'

        // parameters of R1 trimming
        params.trim_ncores = 2
        params.adapter_seq = "CTGTCTCTTATA"  // nextera
        params.trim_qual = 20

        // parameters of R2 parsing
        params.umi_len = 10
        params.r2_parse_threads = 4

        // parameters of genome alignment
        params.alignment_ncore = 4
        params.ramsize = 4000000000

        // parameters for read counting & bam annotation
        params.count_ncores = 3
        params.macs_genome_type = "mm"
        params.genome_file = '/mouse/bwa_index/GRCm39.primary_assembly.genome.fa.gz'
        params.bwa_index_dir = '/mouse/bwa_index/'
        params.star_index_dir = '/mouse/star_index/'

        // parameters for read counting & bam annotation
        params.genome_bin = '/mouse/GRCm39_1kb.saf'
        params.genome_saf = '/mouse/gencode.vM28.annotation.saf'
        params.genome_gtf_collapsed = '/mouse/gencode.vM28.annotation.collapsed.gtf'
        params.genome_bed = '/mouse/gencode.vM28.annotation.bed'
        params.enhancer_saf = '/mouse/old_annots/GRCm39_Encode_Enhancers.saf'
        params.promoter_saf = '/mouse/old_annots/GRCm39_Encode_Promoters.saf'
        params.genome_element_db_saf = '/mouse/mmSDB.saf'

        process {

            executor = 'awsbatch'                          
            queue = 'aws-batch-nextflow'
            cpus = 4
            memory = 8.GB
            
            container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/cutadapt:latest' 
            withName: split_annot_r1 {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }
            withName:trim_fq_single {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/cutadapt:latest'
            }

            withName:parse_pairedtag_r2 {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:barcode_qc {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:add_tags {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_bams {
                memory = 40.GB
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:alignment_qc {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:star_aligner_single {
                memory = 40.GB
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/star:latest'
            }

            withName:bwa_aligner_single {
                memory = 40.GB
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_rnaseqc {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }

            withName:rnaseqc_call {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/rseqc:latest'
            }

            withName:annotate_reads_with_features {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/featurecounts:latest'
            }

            withName:umitools_count {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/umi_tools:latest'
            }

            withName:annotate_multiple_features {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/featurecounts:latest'
            }

            withName:merge_counts {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/scanalysis:latest'
            }

            withName:h5ad_qc {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/scanalysis:latest'
            }

            withName:MACS2_peakcall {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/macs2:latest'
            }

            withName:chip_qc {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/bwa:latest'
            }

            withName:merge_chip_qc {
                container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/skbio:latest'
            }
        }

        docker {
            enabled = true
        }

                                 
        // process.container = '204154409870.dkr.ecr.us-west-2.amazonaws.com/pairedtag:latest'     
        // workDir = params.OUTPUTDIR                                         
        // aws.batch.cliPath = '/opt/conda/bin/aws'
        aws.region = 'us-west-2'
        aws.accessKey = 'AKIAS7CENCOHDGXIQSHH'
        aws.secretKey = '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'
    }

}
